#+title: Emacs Config
#+TODO: DISABLED

* Base Settings

** Customization Saving

Do not save customizations in =init.el=; Instead save them in a temporary file that will be discarded. As a result, any customizations made in a session will not be persisted across sessions.

#+begin_src emacs-lisp
(setq custom-file (expand-file-name
                   (format "custom-%d-%d.el" (emacs-pid) (random))
                   temporary-file-directory))
#+end_src

** No Littering

Move all common files typically written to the =user-emacs-directory= to the =var= and =etc= subdirectories so that they can be included in =.gitignore=.

#+begin_src emacs-lisp
(use-package no-littering
  :ensure (:wait t))
#+end_src

** Don't allow org to change indentation

Org mode indents elsip weird. Prevent that.

#+begin_src emacs-lisp
(setq org-adapt-indentation nil)
#+end_src

** Show Line Numbers

Show line numbers when in a programming mode.

#+begin_src emacs-lisp
(add-hook 'prog-mode-hook 'display-line-numbers-mode)
#+end_src

* Startup Time

#+begin_src emacs-lisp
(add-hook 'after-init-hook
          (lambda ()
            (let ((inhibit-message t))
              (message "Emacs init time: %s" (emacs-init-time)))))
#+end_src

* Magit

One half of the reason I used emacs

** Transient

The current base =magit= package (as of Thu Nov 7 2024) requires a higher version of =transient= than what gets installed with =magit=. Force a higher verison.

#+begin_src emacs-lisp
(use-package transient
  :ensure (:tag "v0.7.9" :wait t))
#+end_src

** Magit

#+begin_src emacs-lisp
(use-package magit
  :ensure (:wait t))
#+end_src

* Markdown Mode

I write Markdown files

#+begin_src emacs-lisp
(use-package markdown-mode
  :ensure (markdown-mode :host github :repo "jrblevin/markdown-mode" :protocol ssh :wait t)
  :init (setq markdown-command "multimarkdown"))
#+end_src

* Strip Whitespace

#+begin_src emacs-lisp
  (use-package ws-butler
    :ensure (ws-butler :host github :repo "hlissner/ws-butler" :protocol ssh :wait t)
    :config
    (setq ws-butler-keep-whitespace-before-point nil)
    ;; Do not exempt markdown mode
    (delq 'markdown-mode ws-butler-global-exempt-modes))

  (ws-butler-global-mode)
#+end_src
